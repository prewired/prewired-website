---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import { getLinkPreview } from "link-preview-js";
import coverPhoto from "@assets/photos/sh18_live_cr.jpg";


/****  GET LOCAL BLOG POSTS ****/
const posts = await getCollection("posts");


/****  GET EXTERNAL POSTS ****/
type ExternalPost = {
	url: string;
	date: Date;
};

type ExternalPostPreview = {
    url: string;
    title: string;
    siteName?: string;
    description?: string;
    mediaType: string;
    contentType?: string;
    images: string[];
    videos: {
        url?: string;
        secureUrl?: string | null;
        type?: string | null;
        width?: string;
        height?: string;
    }[];
    favicons: string[];
};

// Links that are commented out are broken links from the OG website
const externalPosts: ExternalPost[] = [
	{ url: "https://medium.com/@indiathomson/prewired-x-hypercube-summer-make-a-thon-41f03bea0311", date: new Date("2024-08-07") },
	{ url: "https://medium.com/kinandcartacreated/summer-tech-make-a-thon-dedaa474d3eb", date: new Date("2023-10-09")},
	{ url: "https://www.digit.fyi/prewired-receives-funding-to-bring-coding-club-online/", date: new Date("2021-01-20") },
	{ url: "https://scottishbusinessnews.net/prewired-secures-funding-from-creative-informatics-to-take-one-of-scotlands-longest-running-coding-clubs-for-young-people-online/", date: new Date("2021-01-20") },
	// { url: "https://informatics.ed.ac.uk/news-events/news/news-archive/prewired-secures-funding-coding-club-online", date: new Date("2021-01-19") },
	{ url: "https://www.scotsman.com/business/nick-freer-comment-start-ups-hit-all-right-notes-night-193754", date: new Date("2018-12-09") },
	{ url: "https://www.insider.co.uk/news/scottish-tech-startup-awards-finalists-13540999", date: new Date("2018-11-06") },
	{ url: "https://dailybusinessgroup.co.uk/2018/11/scottish-tech-startups-in-battle-for-honours/", date: new Date("2018-11-06") },
	// { url: "https://www.thisiscodebase.com/blog/2018/8/1/summerhack2018-roundup", date: new Date("2018-08-02") },
	{ url: "https://blog.scottlogic.com/2016/08/22/building-the-next-generation-of-technology-professionals.html", date: new Date("2016-08-22") },
	{ url: "https://futurescot.com/hey-teacher-leave-kids-alone-why-children-better-left-to-learn-coding-by-themselves/", date: new Date("2016-04-18") },
	// { url: "https://www.thisiscodebase.com/blog/2015/7/28/prewired-at-codebase-festival-of-code-2015", date: new Date("2015-07-28") },
	{ url: "https://tfn.scot/features/chief-encounters-its-not-all-play-and-now-work-for-freda-obyrne", date: new Date("2015-06-25") }
];

// Create a list of link preview promises
const externalPostPromises = externalPosts.map(post => getLinkPreview(post.url, {
	followRedirects: "follow",
	headers: {
		// We pretend to be Slack to circumvent Cloudflare's bot protection
		"user-agent": "Slackbot-LinkExpanding 1.0 (+https://api.slack.com/robots)",
	}
}));

// Resolve all link preview promises in parallel
// We cast it as ExternalPostPreview (a subset of the actual type in link-preview-js) as we only preview web pages, not different media types, and this avoids having to ignore TypeScript
const externalPostPreviews = await Promise.all(externalPostPromises) as ExternalPostPreview[];


/****  COMBINE DIFFERENT POST TYPES INTO ONE FEED ****/
type FeedItem = {
	id: string;
	date: Date;
	type: "local" | "external";
};

const feed: FeedItem[] = [];
posts.forEach(post => feed.push({ id: post.id, date: post.data.date, type: "local" }));
externalPosts.forEach(post => feed.push({ id: post.url, date: post.date, type: "external" }));

// Sort by date, descending
feed.sort((a, b) => b.date.valueOf() - a.date.valueOf());

// Break up by year
const years: number[] = [];
feed.forEach(post => { if(!years.includes(post.date.getFullYear())) years.push(post.date.getFullYear()) });

const feedByYears = years.map(year => { return { year, posts: feed.filter(post => post.date.getFullYear() === year) } });
---

<PageLayout
	title="News and updates"
	imgSrc={coverPhoto}
	imgAlt="Attendees at Prewired"
>
	<div class="max-w-screen-xl mx-auto">
		{ feedByYears.map(feedYear => (
			<div>
				<h2>{ feedYear.year }</h2>
				{ feedYear.posts.map(feedItem => {
					if(feedItem.type === "local") {
						const post = posts.find(post => post.id === feedItem.id);
						if(!post) return;
						else return (
							<a href={`/news/${post.id}`} class="group text-black! no-underline!">
								<div class="flex mb-4">
									<img src={post.data.image?.url} alt={post.data.image?.alt} class="w-60 h-40 object-cover shrink-0 mr-8 bg-gray-200" />
									<div>
										<h3 class="font-bold group-hover:underline">
											{ post.data.title }
										</h3>
										<p class="group-hover:underline">
											{ feedItem.date.toLocaleDateString("en-GB") } | { post.data.excerpt }
										</p>
									</div>
								</div>
							</a>
						);
					}
					else {
						const post = externalPostPreviews.find(post => post.url === feedItem.id);
						if(!post) return;
						else return (
							<a href={post.url} target="_blank" rel="noopener noreferrer" class="group text-black! no-underline!">
								<div class="flex mb-4">
									<img src={post.images[0]} alt="Image" class="w-60 h-40 object-cover shrink-0 mr-8 bg-gray-200" />
									<div>
										<div class="flex items-center mb-2">
											<img src={post.favicons[0]} alt="Favicon" class="w-4 h-4 mr-2" />
											<span>{ post.siteName }</span>
										</div>
										<h3 class="font-bold group-hover:underline">
											{ post.title }
										</h3>
										<p class="group-hover:underline">
											{ feedItem.date.toLocaleDateString("en-GB") } | { post.description }
										</p>
									</div>
								</div>
							</a>
						);
					}
				})}
			</div>
		))}
	</div>
</PageLayout>
